[tool.poetry]
name = "cadquery"
version = "2.4.0"
description = "CadQuery is a parametric scripting language for creating and traversing CAD models"
authors = ["David Cowden <dave.cowden@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/CadQuery/cadquery"
repository = "https://github.com/CadQuery/cadquery"
documentation = "https://github.com/CadQuery/cadquery"
keywords = ["CAD", "parametric", "scripting", "models"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Topic :: Scientific/Engineering",
]
packages = [
    { include = "cadquery", from = "./" }
]


[tool.poetry.dependencies]
python = ">=3.10, <4"
cadquery-ocp = [
    # Provide wheels for Apple Silicon
    # https://github.com/jdegenstein/ocp-build-system
    { markers = 'platform_system != "Darwin" or platform_machine != "arm64"', version = ">=7.7.0a0,<7.8" },
    { markers = 'python_version == "3.12" and platform_system == "Darwin" and platform_machine == "arm64"', url = "https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp312-cp312-macosx_11_0_arm64.whl" },
    { markers = 'python_version == "3.11" and platform_system == "Darwin" and platform_machine == "arm64"', url = "https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp311-cp311-macosx_11_0_arm64.whl" },
    { markers = 'python_version == "3.10" and platform_system == "Darwin" and platform_machine == "arm64"', url = "https://github.com/jdegenstein/ocp-build-system/releases/download/7.7.2_macos_arm64/cadquery_ocp-7.7.2-cp310-cp310-macosx_11_0_arm64.whl" },
]
ezdxf = "*"
multimethod = "==1.9.1"
nptyping = "==2.0.1"
typish = "*"
casadi = "*"
path = "*"
nlopt = [
    # Provide direct links to wheels, as nlopt does not comply with PEP517 and has no wheels for Apple Silicon.
    # Apple Silicon wheels: https://github.com/jdegenstein/nlopt-python
    # Other wheels: https://pypi.org/project/nlopt/
    # Python 3.12
    { markers = 'python_version == "3.12" and platform_system == "Darwin" and platform_machine == "x86_64"', url = "https://files.pythonhosted.org/packages/e9/55/690349cdf57e2c94136ece9b172b877405e58bae7c6d6d22e95daaff724f/nlopt-2.7.1-cp312-cp312-macosx_10_9_x86_64.whl" },
    { markers = 'python_version == "3.12" and platform_system == "Darwin" and platform_machine == "arm64"', url = "https://github.com/jdegenstein/nlopt-python/releases/download/2.7.1.3/nlopt-2.7.1-cp312-cp312-macosx_11_0_arm64.whl" },
    { markers = 'python_version == "3.12" and platform_system == "Windows" and platform_machine == "AMD64"', url = "https://files.pythonhosted.org/packages/d5/2e/6e78c39b1ab918520711d7eb9d9ad0761a80e59f2b1ca4f73cd7889a3717/nlopt-2.7.1-cp312-cp312-win_amd64.whl" },
    { markers = 'python_version == "3.12" and platform_system == "Linux" and platform_machine == "x86_64"', url = "https://files.pythonhosted.org/packages/7d/5c/f2f676df69694b774df64ec6725cff1f43b5b4d43a421339cac865731906/nlopt-2.7.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl" },
    # Python 3.11
    { markers = 'python_version == "3.11" and platform_system == "Darwin" and platform_machine == "x86_64"', url = "https://files.pythonhosted.org/packages/6e/89/493a6310da558412d9aba161510625f03ac7618ed4382480d3e8aa86c3d9/nlopt-2.7.1-cp311-cp311-macosx_10_9_x86_64.whl" },
    { markers = 'python_version == "3.11" and platform_system == "Darwin" and platform_machine == "arm64"', url = "https://github.com/jdegenstein/nlopt-python/releases/download/2.7.1.3/nlopt-2.7.1-cp311-cp311-macosx_11_0_arm64.whl" },
    { markers = 'python_version == "3.11" and platform_system == "Windows" and platform_machine == "AMD64"', url = "https://files.pythonhosted.org/packages/32/d0/8e025d067e22f60907c84a6a4d253f3ea3b48b2ffd193033b6aa8c79c856/nlopt-2.7.1-cp311-cp311-win_amd64.whl" },
    { markers = 'python_version == "3.11" and platform_system == "Linux" and platform_machine == "x86_64"', url = "https://files.pythonhosted.org/packages/54/4e/a7123adf391ed71175c5c8e8217be2ac3c335cb67c3601d183e94337393d/nlopt-2.7.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl" },
    # Python 3.10
    { markers = 'python_version == "3.10" and platform_system == "Darwin" and platform_machine == "x86_64"', url = "https://files.pythonhosted.org/packages/5b/64/82c644fd37f4e4b078362426a9a3c87d4c99f1e05b995e1627dba4c52bc8/nlopt-2.7.1-cp310-cp310-macosx_10_9_x86_64.whl" },
    { markers = 'python_version == "3.10" and platform_system == "Darwin" and platform_machine == "arm64"', url = "https://github.com/jdegenstein/nlopt-python/releases/download/2.7.1.3/nlopt-2.7.1-cp310-cp310-macosx_11_0_arm64.whl" },
    { markers = 'python_version == "3.10" and platform_system == "Windows" and platform_machine == "AMD64"', url = "https://files.pythonhosted.org/packages/2b/a2/29616e127a31c7dd96d79f6b769fd416df0688ba3ba4c6295fe54e14da56/nlopt-2.7.1-cp310-cp310-win_amd64.whl" },
    { markers = 'python_version == "3.10" and platform_system == "Linux" and platform_machine == "x86_64"', url = "https://files.pythonhosted.org/packages/ac/7a/78301ab01e31e08bc850bf800f34133c823579ace029d7898afe94745571/nlopt-2.7.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl" },
]

numpy = "<2.0.0"
docutils = { version = "*", optional = true }
ipython = { version = "*", optional = true }
pytest = { version = "*", optional = true }
black = { version = "19.10b0", optional = true }
click = { version = "8.0.4", optional = true }


[tool.poetry.extras]
dev = ["docutils", "ipython", "pytest", "black", "click"]
ipython = ["ipython"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
